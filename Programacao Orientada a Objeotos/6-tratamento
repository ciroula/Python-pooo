from abc import ABC, abstractmethod
import os 

os.system("cls || clear")

class Endereco(ABC):
    def __init__(self, logradouro: str, numero: str, cidade: str) -> None:
        self.logradouro = logradouro
        self.numero = numero
        self.cidade = cidade

    def __str__(self) -> str:
        return (
        f"\nLogradouro: {self.logradouro}"
        f"\nNumero: {self.numero}"
        f"\nCidade: {self.cidade}"
            )

class Funcionario(ABC):
    def __init__(self, nome: str, email: str, salario: float, endereco: Endereco) -> None:
        self.nome = nome
        self.email = email
        self.salario = salario
        self.endereco = Endereco

    @classmethod
    def salarioFinal(self) -> float: 
        pass

    def __str__(self)-> str:
        return (
            f"\nNome: {self.nome}"
            f"\nEmail: {self.email}"
            f"\nEndereco: {self.endereco}"
            f"\nSalario: {self.salarioFinal()}"
        )
    
class Gerente(Funcionario):
    def __init__(self, nome: str, email: str, salario: float, endereco: Endereco) -> None:
        super().__init__(nome, email, salario, endereco)

class Motoboy(Funcionario):
    def __init__(self, nome: str, email: str, cnh: str: salario: float, endereco: Endereco) -> None:
        super().__init__(nome, email, cnh, salario, endereco)
        self.cnh = cnh